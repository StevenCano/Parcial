<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJugador</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;

llaveDorada = false;
llaveMagica = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Moviento del jugador

if (keyboard_check(vk_left))
    {
    if (!place_meeting(x-velocidad,y,objMuro))&amp;&amp;(!place_meeting(x-velocidad,y,objCerraduraPadre))&amp;&amp;(!place_meeting(x-velocidad,y,objPuerta))
    {x = x-velocidad;}
    }

if (keyboard_check(vk_right))
    {
    if (!place_meeting(x+velocidad,y,objMuro))&amp;&amp;(!place_meeting(x+velocidad,y,objCerraduraPadre))&amp;&amp;(!place_meeting(x+velocidad,y,objPuerta))
    {x = x+velocidad;}
    }
    
if (keyboard_check(vk_up))
    {
    if (!place_meeting(x,y-velocidad,objMuro))&amp;&amp;(!place_meeting(x,y-velocidad,objCerraduraPadre))&amp;&amp;(!place_meeting(x,y-velocidad,objPuerta))
    {y = y-velocidad;}
    }
    
if (keyboard_check(vk_down))
    {
    if (!place_meeting(x,y+velocidad,objMuro))&amp;&amp;(!place_meeting(x,y+velocidad,objCerraduraPadre))&amp;&amp;(!place_meeting(x,y+velocidad,objPuerta))
    {y = y+velocidad;}
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de llaves

/*  Se utilizará place_meeting para verificar la colisión con aulguna llave
    luego se destruye la llave y se pone a true la variable respectiva en
    el objeto principal de llave
    */
    
if (place_meeting(x,y,objLlaveDorada))
    {
    with(objLlaveDorada){instance_destroy();}
    llaveDorada = true;
    audio_play_sound(sndDiamond, 10, false);
    }
    
if (place_meeting(x,y,objLlaveMagica))
    {
    with(objLlaveMagica){instance_destroy();}
    llaveMagica = true;
    audio_play_sound(sndDiamond, 10, false);
    }
    
    if (place_meeting(x,y,objDiamante))
    {
    with(objDiamante){instance_destroy()}
    llaveMagica = false;
    audio_play_sound(sndDiamond, 10, false);
    }
    
     if (place_meeting(x,y,objDiamante2))
    {
    with(objDiamante2){instance_destroy()}
    llaveMagica = false;
    audio_play_sound(sndDiamond, 10, false);
    }
    
     if (place_meeting(x,y,objDiamante3))
    {
    with(objDiamante3){instance_destroy()}
    llaveMagica = false;
    audio_play_sound(sndDiamond, 10, false);
    }
    
     if (place_meeting(x,y,objDiamante4))
    {
    with(objDiamante4){instance_destroy()}
    llaveMagica = false;
    audio_play_sound(sndDiamond, 10, false);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión de las puertas

/* En forma similar a las llaves se verificará el estado de la variable
   respectiva de la llave, la colisión y luego se destruye la puerta.
   */

if(llaveDorada)
    {
    if(place_meeting(x+velocidad, y, objCerraduraDorada))||
    (place_meeting(x-velocidad, y, objCerraduraDorada))||
    (place_meeting(x, y+velocidad, objCerraduraDorada))||
    (place_meeting(x, y-velocidad, objCerraduraDorada))
        {
        with(objCerraduraDorada){instance_destroy();}
        audio_play_sound(sndDoor, 10, false);
        }
    }
    
    if(llaveMagica)
    {
    if(place_meeting(x+velocidad, y, objCerraduraMagica))||
    (place_meeting(x-velocidad, y, objCerraduraMagica))||
    (place_meeting(x, y+velocidad, objCerraduraMagica))||
    (place_meeting(x, y-velocidad, objCerraduraMagica))
        {
        with(objCerraduraMagica){instance_destroy();}
        audio_play_sound(sndDoor, 10, false);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemigoPadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndDead, 10, false);
instance_destroy();
room_goto(GameOver);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMeta">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndGoal, 10, false);

if(room_exists(room_next(room)))
   {room_goto_next();}
   else
   {room_goto(Inicio);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
